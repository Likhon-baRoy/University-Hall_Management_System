#+TITLE:        üè¢ University Hall Management System
#+AUTHOR:       Likhon Baroi
#+EMAIL:        likhonhere007@gmail.com
#+DATE:         [2024-Sep-25 Wed]
#+TAGS:         management database query university project

:PROPERTIES:
#+OPTIONS:
:END:


* About

This is a project of a dormitory management system website designed to improve the efficiency and effectiveness of managing dormitories or student housing. The website addresses the specific challenges faced by dormitory management, such as managing room assignments, maintaining accurate occupancy records, and processing billing and payment information. The proposed system provides user registration and login, room assignment management, and payment processing functionality. The website was implemented using a combination of programming languages and frameworks, and rigorous testing and validation processes were performed to ensure its reliability and effectiveness. The results of the project showed that the website provided significant benefits to both students and administrators, such as reducing paperwork, increasing transparency, and improving communication. The report concludes with potential areas for future development and improvement, such as integrating with other campus management systems or adding new features to the website. Overall, the dormitory management system website has the potential to revolutionize the management of dormitories and student housing, and provide significant benefits to both students and administrators.

* Table of Contents                                                     :toc:
- [[#about][About]]
- [[#what-are-we-looking-for][What are we looking for?]]
  - [[#fronted-facilities][Fronted Facilities]]
  - [[#admin-panel][Admin-panel]]
- [[#-how-to-contribute][üíª How to contribute?]]
- [[#-license][üìú License]]
- [[#-where-to-report-for-bugs-or-issues][üìù Where to Report for bugs or issues?]]

* What are we looking for?
The basic things that we're looking for is fulfilment of all facilities shown this video: https://youtu.be/5u11Gv-wc_U

** Fronted Facilities

[X] *Homepage:* This page represents: Hall facilities, information, helpline, visual representation of hall indoor & outdoor etc.

[X] *Visual Booking facility:* Allow users visual representation of rooms,
  something like: hotel online book with view system. Can filter/search for the specific rooms. Only rooms with available seat will shown in the booking page.

[X] *Fetch Booked Seat Data:*  When user checked for =Book=, user will redirect to registration page fetching Hall & Room into the form field.

[X] *User validity check:* Check If the user is registered under University. Then we'll let them in. Otherwise we'll show user is invalid. For this to work we keep separate user_type tables where we'll search for user_id & email of users in given user_type in the register field.

[X] *OTP verification:* OTP code will send on user given email with a time limit, If time expire, user have to request for a new OTP.

[-] *Online Payment:* On user successful registration user data will be stored in database
  but with inactive status. To activate account user have to pay the rent in
  advance. The status will automatically activate through online payment API token but as we could not use the paid API, so this  feature is missing. And have to it menualy from admin panel.

** Admin-panel

[X] *Notify on User Status Update:* On status update, user will get notified via email.

[X] *Only Active Status login facility:* If user status is active then user can login, otherwise user is restricted.

[X] *Dashboard graphical representation:* In user Dashboard we'll try to show some infos about hall, users ups-and-down etc through graphical representation.

[X] *Dynamic Permissions:* Admin can give role wise permissions to each user_type so that student can't get access of admin options.

[X] *Add Hall,Room,Seat Dynamically:* Permitted Admin can create/edit/update or publish/unpublish Hall,Room,Seat.

*** Application Panel

User can apply this fields, and when admin Approval/Rejection user will get notify through email. And when rejected admin can't proceed with that application anymore.

[X] *Seat Cancellation:* User can cancel their seat by applying If admin accept their request.

[X] *Seat Changing*: If user have seat, then they can apply for their seat change for available seats.

[X] *Seat Renewal Request:* When user cancel their seat, they can apply for seat renew through application as long as their data is in user database.

*** Problem Panel

Only user can post problem & admin can see all user problems and reply. And upon reply user will get notify through email & Laravel database. There is a limit given on posting problem. User can post 3 problems per day, and If their any problem post got deleted/resolved they can post another one.

~(/so that's it for now! we may update according to our requirements./)~

* üíª How to contribute?

All contributions are welcome! Code, documentation, graphics or even design suggestions are welcome; use GitHub to its fullest. Submit pull requests, contribute tutorials or other wiki content -- whatever you have to offer, it would be appreciated!

* üìú License

This project is licensed under the GNU General Public License v3.0 - see the [[https://github.com/Likhon-baRoy/Hall-Management-System/blob/main/LICENSE][LICENSE]] file for details.

* üìù Where to Report for bugs or issues?

Report [[https://github.com/Likhon-baRoy/Hall-Management-System/issues/new][here]] in detail answering these questions:

- What steps did you take to make the bug appear?
- How can the bug be fixed? (In case you know)
- Which OS and which all packages / softwares / dependencies are you using?
- Have you tried any troubleshooting steps such as a reboot for example?
- Have you followed the prescribed prerequisites?
